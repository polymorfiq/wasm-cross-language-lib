name: test

on:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  WASM_FILE: wasm/target/wasm32-unknown-unknown/release/wasm.wasm

jobs:
  test_rust:
    runs-on: ubuntu-latest
    env:
      working-directory: ./lib
    steps:
    - uses: actions/checkout@v2
    - name: Test Rust Lib
      working-directory: ${{env.working-directory}}
      run: cargo test

  build_wasm:
    needs: test_rust
    runs-on: ubuntu-latest
    env:
      working-directory: ./wasm
    steps:
    - uses: actions/checkout@v2
    - run: rustup target add wasm32-unknown-unknown
    - name: Build
      working-directory: ${{env.working-directory}}
      run: cargo build --release --target wasm32-unknown-unknown --verbose
    - uses: actions/upload-artifact@master
      with:
        name: core-wasm
        path: $WASM_FILE

  generate_wat:
    needs: build_wasm
    runs-on: ubuntu-latest
    steps:
      - name: Install wat-wasm
        run: npm install wat-wasm -g
      - name: Commit report
        run: |
          wat-wasm $WASM_FILE -o current.wat
          git config --global user.name 'Automated WAT-WASM'
          git config --global user.email 'automated-wasm@users.noreply.github.com'
          git add current.wat
          git commit -m "Automated wat-wasm"
          git push

  test_elixir:
    needs: build_wasm
    runs-on: ubuntu-latest
    env:
      working-directory: ./languages/elixir
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: core-wasm
          path: languages/elixir/priv/
      - uses: actions/setup-elixir@v1
        with:
          otp-version: '25'
          elixir-version: '1.14.0'
          experimental-otp: true
      - run: mix deps.get
        working-directory: ${{env.working-directory}}
      - run: mix test
        working-directory: ${{env.working-directory}}

  test_nodejs:
    needs: build_wasm
    runs-on: ubuntu-latest
    env:
      working-directory: ./languages/nodejs
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: core-wasm
          path: languages/nodejs/vendor/
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.6.0
      - run: npm install
        working-directory: ${{env.working-directory}}
      - run: npm test
        working-directory: ${{env.working-directory}}
